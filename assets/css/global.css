/* CSS Custom Properties are kept in theme.css */

html,
body {
  position: relative;
  width: 100%;
  height: 100%;
}

body {
  color: #333;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  letter-spacing: 1.2px;
  line-height: 1.3;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
    Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
}

/* Theming -- Color, style */
*, *::after, *::before {
  box-sizing: border-box;
}

/* main {
  margin: 0 auto;
  color: #333;
  font-weight: var(--font-weight);
  font-size: var(--font-size);
} */

/* Tag Selectors -- Base styling for elements */

h1 {
  font-size: var(--main-heading-size);
  font-weight: var(--main-heading-weight);
  display: flex;
  align-items: flex-end;
  justify-content: space-between;
  margin: 0 0 var(--pad) 0;
}

h2,
h3,
h4,
h5,
h6 {
  font-size: var(--sub-heading-size);
  font-weight: var(--sub-heading-weight);
  margin: var(--pad) 0;
  display: flex;
  align-items: flex-end;
  justify-content: space-between;
}

h1 > small,
h2 > small,
h3 > small,
h4 > small,
h5 > small,
h6 > small {
  font-size: var(--font-size);
  font-weight: var(--font-weight);
}

h1 > span,
h2 > span,
h3 > span,
h4 > span,
h5 > span,
h6 > span {
  display: flex;
  align-items: flex-end;
}

h1 > span > svg,
h2 > span > svg,
h3 > span > svg,
h4 > span > svg,
h5 > span > svg,
h6 > span > svg,
button > svg,
a > svg {
  height: var(--sub-heading-size);
  margin: 0 15px 0 0;
}

button {
  font-family: inherit;
  border: none;
  background-color: transparent;
  padding: 0;
  position: relative;
}

button > svg {
  width: 1.2em;
  height: 1.2em;
  fill: currentColor;
  /* margin: 0 .5em; */
}

button:hover {
  cursor: pointer;
}

button:focus {  
  outline: var(--focus);
}

a {
  text-decoration: none;
  color: inherit;
  transition: var(--hover-transition);
}

a > svg {
  width: 1.2em;
  height: 1.2em;
  fill: currentColor;
}

a:hover {
  cursor: pointer;
}

a:focus {
  outline: var(--focus);
}

ul {
  list-style: var(--unordered-list-style);
  /* padding: 0; */
}

ol > li, ul > li {
  /* margin: 0 auto var(--gap); */
  margin-bottom: var(--gap);
}

ul li::marker, ol li::marker {
  color: var(--marker-color);
}

nav {
  width: 100%;
  max-width: 100vw;
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 70px;
  padding: 0 10px;
}

nav > ul {
  display: flex;
  list-style: none;
  height: 100%;
}

nav > a {
  border: none;
}

nav ~ a:hover {
  cursor: pointer;
}

nav svg {
  height: calc(var(--main-heading-size) + 10px);
}

nav > ul > li {
  margin-left: 10px;
  margin-top: 20px;
  padding: var(--button-padding);
}

nav > ul > li > a {
  border: none;
}

footer {
  padding: var(--footer-padding);
}

form {
  padding: 10px;
  transition: var(--hover-transition);
}

form:focus-within {
  box-shadow: 5px 5px 7px #333, 3px 3px 5px #33333396;
}

form button{
  margin-top: var(--gap);
  font-size: var(--font-size);
  margin: 0 auto;
  min-width: 50%;
}

form:invalid button {
  background-color: var(--disabled);
}

form:valid:focus-within button {
  background: var(--select-icon) 10%/6% no-repeat transparent;
  background-size: contain;
}

form:valid:focus-within button:focus {
  background: var(--select-icon) 10%/6% no-repeat transparent;
  background-size: contain;
}

form:valid:focus-within button:hover {
  background: var(--select-icon) 10%/6% no-repeat transparent;
  background-size: contain;
}

label {
  display: flex;
  margin-top: 10px;
}

label > input, label + input {
  border-bottom: var(--border-bottom);
  border-right: var(--border-right);
  border-top: var(--border-top);
  border-left: var(--border-left);
  border-radius: var(--input-border-radius);
  margin-top: 5px;
  width: 100%;
  padding: var(--button-padding);
  font-size: calc(var(--font-size) - 3px);
  color: var(--grey);
  transition: var(--hover-transition);
}

select:focus, textarea:focus, input:focus {
  outline: var(--focus);
  color: var(--black);
}

input:invalid, select:invalid, textarea:invalid {
  border-color: var(--invalid-color);
  background-color: var(--invalid-background);
}

select {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  border-bottom: var(--border-bottom);
  border-right: var(--border-right);
  border-top: var(--border-top);
  border-left: var(--border-left);
  border-radius: var(--input-border-radius);
  margin-top: 5px;
  width: 100%;
  padding: var(--button-padding);
  font-size: calc(var(--font-size) - 3px);
  color: var(--grey);
  transition: var(--hover-transition);
  cursor: text;
  background: var(--select-icon) 98%/6% no-repeat transparent;
  background-size: contain;
}

textarea {
  border-bottom: var(--textarea-border-bottom);
  border-right: var(--textarea-border-right);
  border-top: var(--textarea-border-top);
  border-left: var(--textarea-border-left);
  border-bottom-right-radius: 4px;
  margin-top: 5px;
  width: 100%;
  padding: var(--button-padding);
  font-size: calc(var(--font-size) - 3px);
  color: var(--grey);
  transition: var(--hover-transition);
  resize: none;
  line-height: 1.5;
  height: 100px;
  font-family: inherit;
  color: var(--grey);
  font-weight: inherit;
  letter-spacing: inherit;
}

img:not([alt]) {
  outline: 2px solid var(--error);
}

p {
  margin: 0 0 var(--pad) 0;
}

small {
  font-size: var(--font-size-sm);
  color: var(--font-color-light);
}
/* Layout Class -- Classes to help build layouts */
.center {
  display: grid;
  place-items: center;
}

.pancake {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.pancake > article, .pancake > div {
  flex: 1 1 var(--grid-width);
  gap: var(--gap);
  margin: var(--gap);
}

.grid {
  display: grid;
  gap: var(--gap);
  grid-template-columns: repeat(auto-fit, minmax(var(--grid-width), 1fr));
}

.page {
  display: grid;
  min-height: 100vh;
  grid-template-rows: auto 1fr auto;
}

.sidebar {
  display: grid;
  grid-template-columns: minmax(250px, 25%) 1fr;
}

.bi-column {
  display: grid;
  grid-template-columns: 1fr 1fr;
  place-items: center;
}

[class*="column-"] {
  display: flex;
  flex-direction: column;
}

[class*="row-"] {
  display: flex;
  flex-direction: row;
}

[class*="-center"] {
  align-items: center;
}

[class*="-start"] {
  align-items: flex-start;
}

[class*="-end"] {
  align-items: flex-end;
}

[class*="-between"] {
  justify-content: space-between;
}

[class*="-evenly"] {
  justify-content: space-evenly;
}

[class*="-around"] {
  justify-content: space-around;
}
/* Utility Classes -- Odd and end classes */

.sticky {
  position: sticky;
}

.center-text {
  text-align: center;
}

.unstyled-list {
  list-style: none;
  margin: 0;
  padding: 0;
}

.rounded {
  border-radius: var(--border-radius);
}

.full-width {
  width: 100%;
}

.full-screen {
  width: 100vw;
  height: 100vh;
  overflow: hidden;
}

.overflow-hidden {
  overflow: hidden;
}

.scroll-y {
  overflow-y: scroll;
}

.padding {
  padding: 15px;
}

.padding-y {
  padding: 15px 0;
}

.padding-x {
  padding: 0 15px;
}

.glassmorphic {
  padding: var(--button-padding);
  background: hsla(0, 0%, 100%, .5);
  border: solid 1px hsla(0, 0%, 100%, .6);
  background-clip: padding-box;
  backdrop-filter: blur(20px);
}

/* Component Classes --  Classes prebuilt for common components */

[class*="card"] {
  padding: var(--card-padding);
  background: var(--card-background);
  max-height: var(--card-max-height);
  width: 100%;
  max-width: var(--card-max-width);
  display: flex;
  flex-direction: column;
  margin: 0 auto var(--gap);
}

[class*="card"] img {
  width: 100%;
  max-height: calc(var(--card-max-height) / 2);
}

.cta {
  border: solid 1px var(--black);
  padding: var(--button-padding);
  border-radius: var(--border-radius);
  color: var(--primary);
  background-color: var(--secondary);
  width: 200px;
  justify-content: center;
}

.cta:hover {
  filter: none;
  color: inherit;
  background-color: transparent;
}

[class*="button"] {
  padding: var(--button-padding);
  border: var(--button-border);
  font-size: var(--main-font-size);
  border-radius: var(--button-border-radius);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-width: 10ch;
  min-height: 44px;
  transition: var(--hover-transition);
  text-align: center;
  line-height: 1.1;
}

[class*="-primary"] {
  background-color: var(--primary);
}

[class*="-secondary"] {
  background-color: var(--secondary);
}

[class*="-accent"] {
  background-color: var(--accent);
}

.checkbox {
  display:grid;
  grid-template-columns: min-content auto;
  gap: var(--gap);
  font-size: var(--font-size);
  padding-top: 20px;
  margin-bottom: 10px;
  text-align: left;
}

.checkbox:hover {
  cursor: pointer;
}

.checkbox--input {
  display: grid;
  grid-template-areas: "checkbox";
}

.checkbox--input > * {
  grid-area: checkbox;
}

.checkbox--input input {
  opacity: 0;
  width: 0;
  height: 0;
}

.checkbox--input input:checked + .checkbox--control svg {
  transform: scale(1);
  background-color: var(--accent);
}

.checkbox--input input:focus + .checkbox--control {
  outline: var(--focus);
}

.checkbox--control {
  display: inline-grid;
  width: 1em;
  height: 1em;
  border-radius: .25em;
  border: .1em solid currentColor;
}

.checkbox--control svg {
  transition: transform .1s ease-in 25ms, background-color .1s ease-in 25ms;
  transform: scale(0);
  transform-origin: bottom left;
}

.inline-link {
  background-color: var(--accent);
  padding: 2px 5px;
  text-decoration: underline;
}

.modal-bg {
  width: 100vw;
  height: 100vh;
  top: 0;
  display: grid;
  place-items: center;
  position: fixed;
  background-color: hsla(0, 0%, 20%, .6);
  z-index: 3;
}

.modal {
  margin: 15px 10px;
  padding: 15px;
  z-index: 5;
  height: 90vh;
  background-color: hsla(0, 0%, 100%, 1);
  width: 90%;
  max-width: 1200px;
  opacity: 1;
}

.toast {
  position: fixed;
  bottom: 10px;
  right: 10px;
  width: 90%;
  max-width: 500px;
  z-index: 10;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--button-padding);
  height: 60px;
}

.toast > svg {
  width: 40px;
  height: 100%;
}

.gallery-card {
  display: grid;
  overflow: hidden;
  height: 40vh;
  border: 1px solid var(--accent);
  box-shadow: 2px 2px 4px rgba(0, 0, 0, .15);
  grid-template-areas: card;
  place-items: end;
  background-color: transparent;
  padding-top: 0;
}

.gallery-card > img {
  object-fit: cover;
  width: 100%;
  height: 40vh;
  max-height: none;
  display: block;
  grid-area: card;
  transition: filter 600ms ease-in;
  margin-left: 0;
}

.gallery-card:hover > img{
  filter: sepia(100%);
}

.gallery-card:hover > p {
  transform: translateY(0);
}

.gallery-card > p {
  grid-area: card;
  margin: 0;
  transform: translateY(100%);
  transition: transform 700ms ease-in;
  will-change: transform;
  text-align: right;
  padding: .25em .5em;
  border-radius: var(--border-radius);
  background-color: rgba(0, 0, 0, .87);
  color: var(--white);
}

.overlay-hero {
  height: 65vh;
  max-height: 600px;
  display: grid;
  grid-template-areas: "hero";
  align-items: center;
}

.overlay-hero > * {
  grid-area: hero;
}

.overlay-hero img, .overlay-hero video {
  object-fit: cover;
  object-position: 5vw -5vmin;
  height: 100%;
  width: 80%;
  justify-self: end;
  transition: width 180ms ease-in;
}

.overlay-hero > .content {
  margin: 1rem 0 1rem 5%;
  max-width: 35%;
  min-width: 30ch;
  z-index: 1;
  background: linear-gradient(90deg, rgba(255, 255, 255, 0.342), #33333350);
  border-radius: var(--border-radius);
  padding: .5rem .5rem 2rem 0;
}
